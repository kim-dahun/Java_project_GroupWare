org.jfree.chart.renderer.category.GanttRenderer: 간트 차트를 렌더링하는 클래스입니다.

org.jfree.data.gantt.TaskSeries: 간트 차트에서 사용하는 작업(Task) 시리즈를 나타내는 클래스입니다.

org.jfree.data.gantt.Task: 간트 차트에서 사용하는 작업(Task)을 나타내는 클래스입니다.

간트 차트를 만드는 방법은 다음과 같습니다.

TaskSeries 객체를 생성합니다. 이 객체는 간트 차트에서 사용하는 작업 시리즈를 나타냅니다.

Task 객체를 생성하고, TaskSeries 객체에 추가합니다. 이 객체는 각 작업(Task)의 정보를 나타냅니다. 작업은 시작일과 종료일, 그리고 작업의 이름으로 구성됩니다.

TaskSeriesCollection 객체를 생성합니다. 이 객체는 TaskSeries 객체의 컬렉션을 나타냅니다.

GanttRenderer 객체를 생성합니다. 이 객체는 간트 차트를 렌더링합니다.

CategoryPlot 객체를 생성하고, TaskSeriesCollection 객체를 CategoryDataset 인터페이스로 캐스팅하여 전달합니다.

CategoryAxis와 DateAxis 객체를 생성합니다. 이 객체는 간트 차트의 축을 나타냅니다.

ChartFactory.createGanttChart() 메서드를 사용하여 간트 차트를 생성합니다. 이때, CategoryPlot 객체와 GanttRenderer 객체, CategoryAxis 객체, DateAxis 객체, 그리고 차트의 제목을 전달합니다.

생성된 간트 차트를 ChartPanel 객체에 추가합니다. 이를 위해서는 ChartPanel 클래스를 사용합니다.

다음은 간트 차트를 생성하는 예제 코드입니다.

java
Copy code
TaskSeries taskSeries = new TaskSeries("Project");
Task task1 = new Task("Task 1", new Date(2023, 3, 15), new Date(2023, 3, 25));
Task task2 = new Task("Task 2", new Date(2023, 4, 1), new Date(2023, 4, 15));
taskSeries.add(task1);
taskSeries.add(task2);

TaskSeriesCollection dataset = new TaskSeriesCollection();
dataset.add(taskSeries);

GanttRenderer renderer = new GanttRenderer();

CategoryPlot plot = new CategoryPlot();
plot.setDataset(dataset);
plot.setRenderer(renderer);

CategoryAxis categoryAxis = new CategoryAxis("Task");
DateAxis dateAxis = new DateAxis("Date");

JFreeChart chart = ChartFactory.createGanttChart(
    "Project Schedule", "Task", "Date", dataset, true, true, false);
chart.getCategoryPlot().setRenderer(renderer);

ChartPanel chartPanel = new ChartPanel(chart);
위 코드에서 TaskSeries 클래스와 Task 클래스는 org.jfree.data.gantt 패키지에 있습니다

COL_EMPNO_SCH,COL_STARTDAY,COL_ENDDAY,COL_TITLE,COL_CONTENT